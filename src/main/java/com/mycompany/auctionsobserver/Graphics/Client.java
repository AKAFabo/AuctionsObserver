/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.auctionsobserver.Graphics;

import com.mycompany.auctionsobserver.Auction;
import com.mycompany.auctionsobserver.Person;
import com.mycompany.auctionsobserver.Product;
import java.awt.FlowLayout;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabo
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public Client() {
        initComponents();
        
        try {
            socket = new Socket("localhost", 1234);
            inputStream = new ObjectInputStream(socket.getInputStream());
            outputStream = new ObjectOutputStream(socket.getOutputStream());
            
            new Thread(new ClientHandler()).start();
        } catch (IOException e){
            e.printStackTrace();         
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        auctionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addAuctionButton = new javax.swing.JButton();
        bidAuctionButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout auctionPanelLayout = new javax.swing.GroupLayout(auctionPanel);
        auctionPanel.setLayout(auctionPanelLayout);
        auctionPanelLayout.setHorizontalGroup(
            auctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        auctionPanelLayout.setVerticalGroup(
            auctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Auction manager");

        addAuctionButton.setText("Add an auction");
        addAuctionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAuctionButtonActionPerformed(evt);
            }
        });

        bidAuctionButton.setText("Bid for an auction");

        jButton1.setText("Manage your auctions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(auctionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(78, 78, 78)
                        .addComponent(addAuctionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bidAuctionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addAuctionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bidAuctionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(auctionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAuctionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAuctionButtonActionPerformed
        String name = JOptionPane.showInputDialog("Type the name of the product");
        int startPrice = Integer.parseInt(JOptionPane.showInputDialog("Type the price of the product"));
        
        Product product = new Product(name, startPrice, startPrice);
        
        selfAuctions.add(new Auction(currentClient, product));   
               
        try {
            outputStream.writeInt(ADD_AN_AUCTION);
            outputStream.flush();
            outputStream.writeObject(currentClient);
            outputStream.flush();
            outputStream.writeObject(product);
            outputStream.flush();
            outputStream.writeObject(new Auction(currentClient, product));
            outputStream.flush();
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addAuctionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                String userName = JOptionPane.showInputDialog(null, "Ingrese su nombre:");
                               
                Client gui = new Client();
                gui.setTitle(userName);
                gui.setVisible(true);
                currentClient.setName(userName);
                auctionPanel.setLayout(new BoxLayout(auctionPanel, BoxLayout.Y_AXIS));
                
            }
        });
    }
    
    public void showAuctions(){
        
    }
    
    private class ClientHandler implements Runnable {
        @Override
        public void run() {
            try {
                while (true) {
                    int option = inputStream.readInt();
                    
                    switch (option){
                        
                        case (ADD_AN_AUCTION):
                            Person auctioneer = (Person)inputStream.readObject();
                            Product product = (Product)inputStream.readObject();
                            Auction auction = (Auction)inputStream.readObject();
                            
                            generalAuctions.add(auction);
                            
                            JButton auctionButton = new JButton();
                            auctionButton.setText("Auctioneer: " + auctioneer.getName() + ". Product name: " + product.getName() + ". Price: " + product.getStartPrice());
                            auctionPanel.add(auctionButton);
                            auctionPanel.revalidate();
                            auctionPanel.repaint();
                            break;
                            
                        case (BID_FOR_AN_AUCTION):
                            break;
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

   
    private ArrayList<Auction> generalAuctions = new ArrayList<>(); //this will be broadcasted through all the sockets!
    private ArrayList<Auction> selfAuctions = new ArrayList<>();
    private static Person currentClient = new Person("");
    
    private final static int ADD_AN_AUCTION = 1;
    private final static int BID_FOR_AN_AUCTION = 2;
    
    ObjectOutputStream outputStream;
    ObjectInputStream inputStream;
    private Socket socket;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAuctionButton;
    private static javax.swing.JPanel auctionPanel;
    private javax.swing.JButton bidAuctionButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
